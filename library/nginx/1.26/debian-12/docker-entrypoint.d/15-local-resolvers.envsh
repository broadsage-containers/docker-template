#!/bin/bash
# SPDX-FileCopyrightText: Copyright (c) 2025 Broadsage <opensource@broadsage.com>
#
# SPDX-License-Identifier: Apache-2.0

# Configure local DNS resolvers for nginx

set -e

ME=$(basename "$0")

auto_add_resolvers() {
    local NGINX_CONF="/etc/nginx/nginx.conf"
    local RESOLV_CONF="/etc/resolv.conf"
    
    # Check if resolver is already configured
    if grep -q "resolver" "$NGINX_CONF"; then
        echo "$ME: Resolver already configured in $NGINX_CONF"
        return
    fi
    
    # Extract nameservers from /etc/resolv.conf
    local RESOLVERS
    RESOLVERS=$(awk '/^nameserver/ { print $2 }' "$RESOLV_CONF" 2>/dev/null | tr '\n' ' ' | sed 's/ $//')
    
    if [[ -n "$RESOLVERS" ]]; then
        # Check if we can write to nginx.conf
        if [[ -w "$NGINX_CONF" ]]; then
            # Add resolver directive in http block
            if grep -q "http {" "$NGINX_CONF"; then
                # Create a backup
                cp "$NGINX_CONF" "${NGINX_CONF}.bak"
                
                # Add resolver after the opening http block
                sed "/http {/a\\    resolver $RESOLVERS valid=10s;" "$NGINX_CONF" > "${NGINX_CONF}.tmp"
                mv "${NGINX_CONF}.tmp" "$NGINX_CONF"
                
                echo "$ME: Added resolver directive with nameservers: $RESOLVERS"
            else
                echo "$ME: Could not find http block in $NGINX_CONF"
            fi
        else
            echo "$ME: Cannot write to $NGINX_CONF - resolver configuration skipped"
        fi
    else
        echo "$ME: No nameservers found in $RESOLV_CONF"
    fi
}

# Export resolver information for use by other scripts
export NGINX_LOCAL_RESOLVERS
NGINX_LOCAL_RESOLVERS=$(awk '/^nameserver/ { print $2 }' /etc/resolv.conf 2>/dev/null | tr '\n' ' ' | sed 's/ $//')

# Only run if nginx command is being executed
if [[ "${1:-}" = "nginx" ]] || [[ "${1:-}" = "/usr/sbin/nginx" ]]; then
    auto_add_resolvers
fi