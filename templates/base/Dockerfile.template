# Copyright {{YEAR}}, {{COMPANY}}. All Rights Reserved.
# SPDX-License-Identifier: APACHE-2.0

FROM {{BASE_IMAGE}}

ARG DOWNLOADS_URL="downloads.bitnami.com/files/stacksmith"
ARG TARGETARCH

LABEL com.vmware.cp.artifact.flavor="sha256:c50c90cfd9d12b445b011e6ad529f1ad3daea45c26d20b00732fae3cd71f6a83" \
      org.opencontainers.image.base.name="{{BASE_IMAGE}}" \
      org.opencontainers.image.created="{{BUILD_DATE}}" \
      org.opencontainers.image.description="{{DESCRIPTION}}" \
      org.opencontainers.image.documentation="https://github.com/{{GITHUB_REPOSITORY}}/tree/main/broadsage/{{APP_NAME}}/README.md" \
      org.opencontainers.image.source="https://github.com/{{GITHUB_REPOSITORY}}/tree/main/broadsage/{{APP_NAME}}" \
      org.opencontainers.image.title="{{APP_NAME}}" \
      org.opencontainers.image.vendor="{{COMPANY}}" \
      org.opencontainers.image.version="{{APP_VERSION}}" \
      org.opencontainers.image.licenses="Apache-2.0"

ENV HOME="/" \
    OS_ARCH="${TARGETARCH:-amd64}" \
    OS_FLAVOUR="{{PLATFORM}}" \
    OS_NAME="linux"

# Copy prebuild filesystem
COPY prebuildfs /
SHELL ["/bin/bash", "-o", "errexit", "-o", "nounset", "-o", "pipefail", "-c"]

# Install required system packages and dependencies
RUN install_packages {{SYSTEM_PACKAGES}}

# Download and install application components
RUN --mount=type=secret,id=downloads_url,env=SECRET_DOWNLOADS_URL \
    DOWNLOADS_URL=${SECRET_DOWNLOADS_URL:-${DOWNLOADS_URL}} ; \
    mkdir -p /tmp/bitnami/pkg/cache/ ; cd /tmp/bitnami/pkg/cache/ || exit 1 ; \
    COMPONENTS=( \
      "{{COMPONENT_PACKAGES}}" \
    ) ; \
    for COMPONENT in "${COMPONENTS[@]}"; do \
      if [ ! -f "${COMPONENT}.tar.gz" ]; then \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz" -O ; \
        curl -SsLf "https://${DOWNLOADS_URL}/${COMPONENT}.tar.gz.sha256" -O ; \
      fi ; \
      sha256sum -c "${COMPONENT}.tar.gz.sha256" ; \
      tar -zxf "${COMPONENT}.tar.gz" -C /opt/bitnami --strip-components=2 --no-same-owner ; \
      rm -rf "${COMPONENT}".tar.gz{,.sha256} ; \
    done

# System hardening and cleanup
RUN apt-get update && apt-get upgrade -y && \
    apt-get clean && rm -rf /var/lib/apt/lists /var/cache/apt/archives && \
    chmod g+rwX /opt/bitnami && \
    find / -perm /6000 -type f -exec chmod a-s {} \; || true

# Application-specific setup
{{APP_SPECIFIC_SETUP}}

# Copy application filesystem
COPY rootfs /
RUN /opt/bitnami/scripts/{{APP_NAME}}/postunpack.sh

# Environment variables for runtime
ENV APP_VERSION="{{APP_VERSION}}" \
    BITNAMI_APP_NAME="{{APP_NAME}}" \
    PATH="/opt/bitnami/common/bin:/opt/bitnami/{{APP_NAME}}/bin:/opt/bitnami/{{APP_NAME}}/sbin:$PATH" \
    {{APP_ENV_VARS}}

EXPOSE {{PORTS}}

STOPSIGNAL SIGQUIT
WORKDIR /app
USER {{USER_ID}}
ENTRYPOINT [ "/opt/bitnami/scripts/{{APP_NAME}}/entrypoint.sh" ]
CMD [ "/opt/bitnami/scripts/{{APP_NAME}}/run.sh" ]
