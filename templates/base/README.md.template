# {{APP_NAME_TITLE}} packaged by {{COMPANY}}

## What is {{APP_NAME_TITLE}}?

> {{APP_DESCRIPTION}}

[{{APP_WEBSITE}}]({{APP_WEBSITE}})

Trademarks: This software listing is packaged by {{COMPANY}}. The respective trademarks mentioned in the offering are owned by the respective companies, and use of them does not imply any affiliation or endorsement.

## TL;DR

```console
docker run --name {{APP_NAME}} ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}}
```

**Warning**: This quick setup is only intended for development environments. You are encouraged to change the insecure default credentials and check out the available configuration options in the [Environment Variables](#environment-variables) section for a more secure deployment.

## Why use {{COMPANY}} Images?

* Relying on BOM tools like [Syft](https://github.com/anchore/syft) and [Grype](https://github.com/anchore/grype) to ensure images contain the latest base OS package versions and application dependencies.
* **Container optimized**: Our images are optimized for containers.
* **Enterprise ready**: {{COMPANY}} applications are based on the same components that power the {{COMPANY}} Application Platform and are released following a stringent security process.
* **Timely updates**: We have expedited release cycles for security updates, with images built and released within hours of a security advisory.
* **Consistent with industry standards**: All {{COMPANY}} images follow the same conventions and are designed to work seamlessly with each other.

## Supported tags and respective `Dockerfile` links

Learn more about the {{COMPANY}} tagging policy and the difference between rolling tags and immutable tags [in our documentation page](https://docs.{{COMPANY_DOMAIN}}/tutorials/understand-rolling-tags-containers/).

You can see the equivalence between the different tags by taking a look at the `tags-info.yaml` file present in the branch folder, i.e `{{PLATFORM}}/tags-info.yaml`.

Subscribe to project updates by watching the [{{COMPANY}} GitHub repo](https://github.com/{{GITHUB_REPOSITORY}}).

## Get this image

The recommended way to get the {{COMPANY}} {{APP_NAME_TITLE}} Docker Image is to pull the prebuilt image from the [GitHub Container Registry](https://github.com/{{GITHUB_REPOSITORY}}/pkgs/container/{{APP_NAME}}).

```console
docker pull ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}}
```

To use a specific version, you can pull a versioned tag. You can view the [list of available versions](https://github.com/{{GITHUB_REPOSITORY}}/pkgs/container/{{APP_NAME}}/versions) in the GitHub Container Registry.

```console
docker pull ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:[TAG]
```

If you wish, you can also build the image yourself by cloning the repository, changing to the directory containing the Dockerfile and executing the `docker build` command. Remember to replace the `APP_NAME`, `APP_VERSION` and `OS_FLAVOUR` path placeholders in the example command below with the correct values.

```console
git clone https://github.com/{{GITHUB_REPOSITORY}}.git
cd containers/broadsage/{{APP_NAME}}/{{APP_VERSION}}/{{PLATFORM}}
docker build -t ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}} .
```

## How to use this image

### Using Docker Compose

The main folder of this repository contains a functional [`docker-compose.yml`](https://github.com/{{GITHUB_REPOSITORY}}/blob/main/broadsage/{{APP_NAME}}/{{APP_VERSION}}/{{PLATFORM}}/docker-compose.yml) file. Run the application using it as shown below:

```console
curl -sSL https://raw.githubusercontent.com/{{GITHUB_REPOSITORY}}/main/broadsage/{{APP_NAME}}/{{APP_VERSION}}/{{PLATFORM}}/docker-compose.yml > docker-compose.yml
docker-compose up -d
```

### Using the Docker Command Line

If you want to run the application manually instead of using `docker-compose`, these are the basic steps you need to run:

#### Step 1: Create a network

```console
docker network create {{APP_NAME}}-network --driver bridge
```

#### Step 2: Launch the {{APP_NAME_TITLE}} container

Use the `docker run` command to create and run the container.

```console
docker run -d --name {{APP_NAME}} \
  --network {{APP_NAME}}-network \
  --publish {{HOST_PORT}}:{{CONTAINER_PORT}} \
  ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}}
```

Access your application at `http://your-ip:{{HOST_PORT}}/`

## Configuration

### Environment variables

When you start the {{APP_NAME}} image, you can adjust the configuration of the instance by passing one or more environment variables either on the docker-compose file or on the `docker run` command line.

{{ENV_VARS_DOCUMENTATION}}

### Configuration files

{{CONFIG_FILES_DOCUMENTATION}}

### Logging

The {{COMPANY}} {{APP_NAME}} Docker image sends the container logs to the `stdout`. To view the logs:

```console
docker logs {{APP_NAME}}
```

You can configure the containers [logging driver](https://docs.docker.com/engine/admin/logging/overview/) using the `--log-driver` option if you wish to consume the container logs differently. In the default configuration docker uses the `json-file` driver.

## Maintenance

### Upgrade this image

{{COMPANY}} provides up-to-date versions of {{APP_NAME}}, including security patches, soon after they are made upstream. We recommend that you follow these steps to upgrade your container.

#### Step 1: Get the updated image

```console
docker pull ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}}
```

#### Step 2: Stop and backup the currently running container

Stop the currently running container using the command

```console
docker stop {{APP_NAME}}
```

Next, take a snapshot of the persistent volume `/path/to/{{APP_NAME}}-persistence` using:

```console
rsync -a /path/to/{{APP_NAME}}-persistence /path/to/{{APP_NAME}}-persistence.bkp.$(date +%Y%m%d-%H.%M.%S)
```

You can use this snapshot to restore the database state should the upgrade fail.

#### Step 3: Remove the currently running container

```console
docker rm -v {{APP_NAME}}
```

#### Step 4: Run the new image

Re-create your container from the new image.

```console
docker run --name {{APP_NAME}} ghcr.io/{{GITHUB_REPOSITORY_OWNER}}/{{APP_NAME}}:{{APP_VERSION}}-{{PLATFORM}}
```

## Notable Changes

{{NOTABLE_CHANGES}}

## Contributing

We'd love for you to contribute to this container. You can request new features by creating an [issue](https://github.com/{{GITHUB_REPOSITORY}}/issues), or submit a [pull request](https://github.com/{{GITHUB_REPOSITORY}}/pulls) with your contribution.

## Issues

If you encountered a problem running this container, you can file an [issue](https://github.com/{{GITHUB_REPOSITORY}}/issues/new/choose). For us to provide better support, be sure to include the following information in your issue:

- Host OS and version
- Docker version (`docker version`)
- Output of `docker info`
- Version of this container
- The command you used to run the container, and any relevant output you saw (masking any sensitive information)

## License

Copyright &copy; {{YEAR}} {{COMPANY}}

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
