# SPDX-FileCopyrightText: Copyright (c) 2025 Broadsage <opensource@broadsage.com>
#
# SPDX-License-Identifier: Apache-2.0

---
name: "[Automation] Branch Protection Setup"

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to configure protection rules for"
        required: false
        default: "main"
        type: string

# Use restrictive default permissions
permissions:
  contents: read

jobs:
  setup-branch-protection:
    runs-on: ubuntu-latest
    name: Configure Branch Protection Rules
    permissions:
      contents: read
      # Note: Repository administration permissions cannot be granted via workflows
      # This requires repository admin privileges or GitHub App with admin:repo_hook scope
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Setup Branch Protection Rules
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ github.event.inputs.branch }}' || 'main';

            console.log(`üîí Setting up branch protection for: ${branch}`);

            try {
              await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: branch,
                required_status_checks: {
                  strict: true,
                  contexts: [
                    'pr-title-validation',
                    'functional-tests',
                    'security-tests'
                  ]
                },
                enforce_admins: false,
                required_pull_request_reviews: {
                  required_approving_review_count: 1,
                  dismiss_stale_reviews: true,
                  require_code_owner_reviews: true,
                  require_last_push_approval: true
                },
                restrictions: null,
                allow_force_pushes: false,
                allow_deletions: false,
                block_creations: false,
                required_conversation_resolution: true
              });
              
              console.log(`‚úÖ Branch protection rules configured for ${branch}`);
              console.log('üìã Required status checks:');
              console.log('  - pr-title-validation (conventional commit format)');
              console.log('  - functional-tests');
              console.log('  - security-tests');
              console.log('üîí Protection includes:');
              console.log('  - Required PR reviews (1 approving)');
              console.log('  - Dismiss stale reviews');
              console.log('  - Require code owner reviews');
              console.log('  - Require conversation resolution');
              console.log('  - Block force pushes and deletions');
              
            } catch (error) {
              console.error(`‚ùå Failed to set up branch protection: ${error.message}`);
              core.setFailed(`Branch protection setup failed: ${error.message}`);
            }
